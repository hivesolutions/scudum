#!/bin/bash
# -*- coding: utf-8 -*-

PERSIST=${PERSIST-/pst}
TARGET=${TARGET-/opt}
CONCURRENCY=${CONCURRENCY-$(nproc)}
NAME_L=${NAME_L-kernel}
MAJOR=${MAJOR-3.x}
MINOR=${MINOR-3.16.3}
NAME=${NAME-linux-$MINOR}
DATE=${DATE-$(date +%Y%m%d)}
VERSION=${VERSION-$MINOR-$DATE}
FILE=${FILE-$NAME_L-$VERSION}
FILE_CONFIG=${FILE_CONFIG-$FILE.config}
REPO=${REPO-/mnt/builds/$NAME_L}
CONFIG=${CONFIG-$PREFIX/system/boot/config}
FALLBACK=${FALLBACK-/boot/config}
SAFE=${SAFE-0}
BUILD=${BUILD-1}
DEPLOY=${DEPLOY-0}

LATEST=$NAME_L-latest
LATEST_CONFIG=$LATEST.config

set -e +h

if [ ! -e $CONFIG ]; then
    CONFIG=$FALLBACK
fi

if mountpoint -q $PERSIST; then
    BUILDER=$PERSIST/ksources
else
    BUILDER=$TARGET/ksources
fi

mkdir -p $BUILDER && cd $BUILDER

if [ ! -d "$NAME" ]; then
    rm -f $NAME.tar.xz && wget https://www.kernel.org/pub/linux/kernel/v$MAJOR/$NAME.tar.xz
    rm -rf $NAME && tar -xvf $NAME.tar.xz
    rm -f $NAME.tar.xz
else
    echo "kernel.build: skipping $NAME retrieval, already exists ..."
fi

cd $NAME

if [ "$SAFE" == "1" ]; then
    make mrproper
fi

cp -v $CONFIG .config

if [ "$BUILD" != "1" ]; then
    exit 0
fi

mkdir -p modules_install

make -j $CONCURRENCY
make modules_install INSTALL_MOD_PATH=modules_install

if [ "$DEPLOY" == "1" ]; then
    echo "kernel.build: deploying kernel into $REPO ..."

    cp -pv arch/x86/boot/bzImage $FILE
    cp -pv .config $FILE_CONFIG

    mkdir -pv $REPO
    mv -fv $FILE $REPO
    mv -fv $FILE_CONFIG $REPO

    cd $REPO
    rm -fv $LATEST
    rm -fv $LATEST_CONFIG
    ln -sv $FILE $LATEST
    ln -sv $FILE_CONFIG $LATEST_CONFIG
else
    echo "kernel.build: installing kernel into the system ..."

    cp -v arch/x86/boot/bzImage /boot/vmlinuz
    cp -v arch/x86/boot/bzImage /isolinux/vmlinuz

    cp -v .config /boot/config
fi
